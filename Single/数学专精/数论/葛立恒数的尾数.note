\title: 葛立恒数的尾数
\path: Last digits of Graham's Number
\date: 2019-12-15
\cats: Mathematics, Number Theory

定义数列 $f_n = 3\char`\^{f_{n-1}}$, $f_0 = 3$

我们有 $f(1)=3^3 = 9$, $f(2) = 3^{3^3}= 7625597484987$, $f(3)$ 的话就写不出来了.

那我们是不是永远无法得知其尾数了呢?

还是有办法的, 尾数之间存在递推关系.

\read_more

---

现假设 $f_n = f_{n-1} \pmod {10^{n-1}}$

当 $n = 2$ 时有:

$f_2 \pmod {10} = f_1 \pmod {10} = 7$

假设 $n＝k$ 时命题成立, 则当 $n=k+1$ 时有:

$$\begin{aligned}
f_{k+1} &= 3^{f_k}\\
&= 3^{f_{k-1}+k\cdot10^{k-1}}\\
&= 3^{f_{k-1}}×3^{k\cdot10^{k-1}}\\
&= f_k×3^{k\cdot10^{k-1}}\\
\end{aligned}$$

欧拉定理指出，若 $n$,$a$ 为正整数，且两数互素 ($\gcd(a,n)=1$)，则

$$a^{\varphi(n)} \equiv 1 \pmod n$$

令 $a = 3$, $n = 10^k$ 有:

$$3^{\varphi(10^k)}=3^{4\times{10^{k-1}}} \equiv 1 \pmod {10^k}$$

于是代回原式直接消去 3 的幂得到:

$$f_{k+1} \equiv f_{k} \pmod{10^k}$$

因此命题对于 $n=k+1$ 同样成立, 于是归纳假设成立.

然后我们据此写出如下计算代码:

```wl
GrahamTail[n_] := Fold[PowerMod[3, #, 10^n] &, Array[3 &, n + 1]]
GrahamTail2[n_] := Fold[PowerMod[3, #1, #2] &, Reverse@FixedPointList[CarmichaelLambda, 10^n]]
```

这个算法算 1000 位尾数需要 15s, GrahamTail2 使用了更多的数论原理加速到 3s.

---

但是如果想知道首位数就没这么便利的方法了, 即便是数值计算也做不到

计算辐射出的熵能把整个宇宙蒸的热寂了

不过话说回来, 计算是不需要消耗任何能量的, 只有观测才要消耗能量.

可以构造一个可逆计算过程, 接着只需要付出 $kT\ln2$ 的熵就能得到 $1\rm{bit}$ 信息.

这样看来在本宇宙内完成计算还是有希望的, 当然完成整个循环的时间就长的不可描述了

不管怎么说 **Graham's Number** 只是 I 类大数, I 类大数都是可计算数

II 类大数大多是不可计算数, 那才玩完了, 更别说还有 III 类大数...

